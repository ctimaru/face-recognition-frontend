{"ast":null,"code":"var _jsxFileName = \"/Users/claudiutimaru/Desktop/projects/face_recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: 'b3e10a988f154438a71e18bfa40508ee'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 130,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '123',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/claudiutimaru/Desktop/projects/face_recognition/src/App.js"],"names":["React","Component","Clarifai","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\n\n\n\n\nconst app = new Clarifai.App({apiKey: 'b3e10a988f154438a71e18bfa40508ee'});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 130,\n      density: {\n        enable: true,\n        value_area: 800,\n      } \n    }\n  }  \n}\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '123',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\nloadUser = (data) => {\n  this.setState({user: {\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entries: data.entries,\n    joined: data.joined\n  }});\n}\n\n  // componentDidMount() {\n  //   fetch('http://localhost:3000/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n\ncalculateFaceLocation = (data) => {\n const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n const image = document.getElementById('inputimage');\n const width = Number(image.width);\n const height =Number(image.height);\n return {\n   leftCol: clarifaiFace.left_col * width,\n   topRow: clarifaiFace.top_row * height,\n   rightCol: width - (clarifaiFace.right_col * width),\n   bottomRow: height - (clarifaiFace.bottom_row * height)\n }\n}\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\nonInputChange = (event) => {\n  this.setState({input: event.target.value});\n}\n\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input});\n  app.models.predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n        .then(response=> {\n          if (response) {\n            fetch('http://localhost:3000/image' , {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'}, \n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then (response=> response.json())\n            .then(count=> {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err=>console.log(err))\n  }\n\nonRouteChange = (route) => {\n  if (route === 'signout'){\n    this.setState({isSignedIn: false})\n  } else if (route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\nrender() {\n  const {isSignedIn, imageUrl, route, box} = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className='particles' params={particleOptions} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name={this.state.user.name}\n                  entries={this.state.user.entries}\n            />\n            <ImageLinkForm onInputChange={this.onInputChange} \n                          onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>   \n          :(\n            route === 'signin' \n            ? <Signin loadUser={this.loadUser} \n                      onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n          )\n        \n         }\n      </div>\n  );\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}